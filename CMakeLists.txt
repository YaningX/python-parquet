cmake_minimum_required(VERSION 3.5)
project(python_parquet)
find_package(PythonLibs 2.7 REQUIRED)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
set(SOURCE_FILES materializing_reader/cpp/main.cpp)
set(LIB_SOURCE_FILES materializing_reader/cpp/MaterializingFileReader.cpp materializing_reader/include/MaterializingFileReader.h materializing_reader/include/PrimitiveFieldConverter.h materializing_reader/include/PrimitiveFieldProcessor.h materializing_reader/include/RecordReader.h materializing_reader/include/Processor.h materializing_reader/include/Converter.h materializing_reader/include/RecordConverter.h materializing_reader/cpp/RecordReader.cpp materializing_reader/cpp/PrimitiveFieldProcessor.cpp materializing_reader/include/Delegates.h materializing_reader/include/PythonSchemaGenerator.h materializing_reader/cpp/PythonSchemaGenerator.cpp)
add_executable(python_parquet ${SOURCE_FILES})
add_library(materializing_reader ${LIB_SOURCE_FILES})
target_link_libraries(python_parquet parquet materializing_reader)

if (DEFINED $ENV{CMAKE_OUTPUT_DIR})
    set(LIBRARY_OUTPUT_PATH  $ENV{CMAKE_OUTPUT_DIR})
    set(EXECUTABLE_OUTPUT_PATH   $ENV{CMAKE_OUTPUT_DIR})
endif()